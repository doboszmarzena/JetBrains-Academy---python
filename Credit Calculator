import argparse
import math
parser = argparse.ArgumentParser(description="Credit Calculator Project")
parser.add_argument('--type', help="Type of Payment (Annuity or Differential")
parser.add_argument('--payment', help="Monthly payment", type=int)
parser.add_argument('--principal', help="Credit principal", type=int)
parser.add_argument('--periods', help= "Count of months", type=int)
parser.add_argument('--interest', help="Credit interest (rate of interest)", type=float)
args = parser.parse_args()


if args.type == 'diff' and args.payment != None:
    print('Incorrect parameters')
    exit(0)
elif args.type not in ['annuity', 'diff']:
    print('Incorrect Parameters')
    exit(0)

args_list = [args.type, args.payment, args.principal, args.periods, args.interest]
count_list = 0
for i in args_list:
    if i == None:
        count_list += 1
if count_list > 1:
    print('Incorrect Parameters')
    exit(0)

if args_list[1] != None and args_list[1] < 0 or args_list[2] != None and args_list[2] < 0 or args_list[3] != None and args_list[3] < 0 or args_list[4] != None and args_list[4] < 0.0:
    print('Incorrect Parameters')
    exit(0)


if args.type == 'diff' and args.principal > 0 and args.periods > 0 and args.interest > 0:
    nominal_interest = args.interest / (12 * 100)
    diff_whole = 0
    for i in range(1, args.periods + 1):
        diff_amount = math.ceil((args.principal/args.periods) + nominal_interest * (args.principal-(args.principal*(i-1)/args.periods)))
        diff_whole += diff_amount
        print(f'Month: {i} paid out {diff_amount}')
    overpayment = diff_whole - args.principal
    print(f'Overpayment: {overpayment}')

if args.type == 'annuity' and args.payment != None and args.principal != None and args.interest != None:
    nominal_interest = args.interest / (12 * 100)
    months = math.ceil(math.log (args.payment / (args.payment - nominal_interest * args.principal), (1 + nominal_interest)))
    overpayment = months * args.payment - args.principal
    years = months // 12
    months = months % 12

    if months == 0:
        print(f'You need {years}, years to repay this credit!')
    elif years == 0:
        print(f'You need {months}, months to repay this credit!')
    else:
        print(f'You need {years} years and {months} months to repay this credit!')
    print(f'Overpayment = {overpayment}')

elif args.type == 'annuity' and args.periods !=None and args.payment !=None and args.interest !=None:
    nominal_interest = args.interest / (12 * 100)
    value = (nominal_interest * math.pow(1 + nominal_interest, args.periods)) / (
                math.pow(1 + nominal_interest, args.periods) - 1)
    credit_principal = int(args.payment / value)
    overpayment = args.periods * args.payment - credit_principal
    print(f'Your credit principal = {str(credit_principal)}!')
    print(f'Overpayment = {overpayment}')

elif args.type == 'annuity' and args.periods !=None and args.principal !=None and args.interest !=None:
    nominal_interest = args.interest / (12 * 100)
    value = (nominal_interest * math.pow(1 + nominal_interest, args.periods)) / (
                math.pow(1 + nominal_interest, args.periods) - 1)
    monthly_payment = args.principal * value
    overpayment = abs(args.periods * math.ceil(monthly_payment) - args.principal)
    monthly_payment = math.ceil(monthly_payment)
    print(f'Your annuity payment = {monthly_payment}!')
    print(f'Overpayment = {overpayment}')
